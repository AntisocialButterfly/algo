eclipse.preferences.version=1
problemStatement=MinimumSquareEasy.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_51" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>MinimumSquareEasy</string>\n  </void>\n  <void property\="contestName">\n   <string>SRM 614 DIV 2 - 500 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;MinimumSquareEasy&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;There are N points in the plane. You are given their description as two int[]s, &lt;b&gt;x&lt;/b&gt; and &lt;b&gt;y&lt;/b&gt;, with N elements each. The N points have coordinates (&lt;b&gt;x&lt;/b&gt;[0],&lt;b&gt;y&lt;/b&gt;[0]), (&lt;b&gt;x&lt;/b&gt;[1],&lt;b&gt;y&lt;/b&gt;[1]), ..., (&lt;b&gt;x&lt;/b&gt;[N-1],&lt;b&gt;y&lt;/b&gt;[N-1]).&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;You want to draw a single square onto the plane. The vertices of the square must have integer coordinates, and the sides of the square must be parallel to the coordinate axes. Additionally, at least N-2 of the N given points must lie strictly inside the square (i.e., not on its boundary).&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;Return the smallest possible area of a square that satisfies these constraints.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;MinimumSquareEasy&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;minArea&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int[], int[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;long&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;long minArea(int[] x, int[] y)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;x&lt;/b&gt; will contain between 3 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;y&lt;/b&gt; will contain the same number of elements as &lt;b&gt;x&lt;/b&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;All points will be pairwise distinct.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;x&lt;/b&gt; will be between -1,000,000,000 and 1,000,000,000, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;y&lt;/b&gt; will be between -1,000,000,000 and 1,000,000,000, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{0, 1, 2}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{0, 1, 5}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The square must contain at least one of the three given points. One of the optimal solutions is the square with opposite corners at (-1,-1) and (1,1).&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{-1, -1, 0, 2, 0}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{-2, -1, 0, -1, -2}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 9&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;This time the square must contain at least three of the five given points. The optimal solution is the square with opposite corners at (-2,-3) and (1,0).&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1000000000, -1000000000, 1000000000, -1000000000}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1000000000, 1000000000, -1000000000, -1000000000}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 4000000008000000004&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;In this case one of the optimal solutions is a square that contains all four points.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{93, 34, 12, -11, -7, -21, 51, -22, 59, 74, -19, 29, -56, -95, -96, 9, 44, -37, -54, -21}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{64, 12, -43, 20, 55, 74, -20, -54, 24, 20, -18, 77, 86, 22, 47, -24, -33, -57, 5, 7}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 22801&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>minArea</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>x</string>\n   </void>\n   <void method\="add">\n    <string>y</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Long</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="3">\n          <void index\="0">\n           <int>0</int>\n          </void>\n          <void index\="1">\n           <int>1</int>\n          </void>\n          <void index\="2">\n           <int>2</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="3">\n          <void index\="0">\n           <int>0</int>\n          </void>\n          <void index\="1">\n           <int>1</int>\n          </void>\n          <void index\="2">\n           <int>5</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <long>4</long>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="5">\n          <void index\="0">\n           <int>-1</int>\n          </void>\n          <void index\="1">\n           <int>-1</int>\n          </void>\n          <void index\="2">\n           <int>0</int>\n          </void>\n          <void index\="3">\n           <int>2</int>\n          </void>\n          <void index\="4">\n           <int>0</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="5">\n          <void index\="0">\n           <int>-2</int>\n          </void>\n          <void index\="1">\n           <int>-1</int>\n          </void>\n          <void index\="2">\n           <int>0</int>\n          </void>\n          <void index\="3">\n           <int>-1</int>\n          </void>\n          <void index\="4">\n           <int>-2</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <long>9</long>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="4">\n          <void index\="0">\n           <int>1000000000</int>\n          </void>\n          <void index\="1">\n           <int>-1000000000</int>\n          </void>\n          <void index\="2">\n           <int>1000000000</int>\n          </void>\n          <void index\="3">\n           <int>-1000000000</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="4">\n          <void index\="0">\n           <int>1000000000</int>\n          </void>\n          <void index\="1">\n           <int>1000000000</int>\n          </void>\n          <void index\="2">\n           <int>-1000000000</int>\n          </void>\n          <void index\="3">\n           <int>-1000000000</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <long>4000000008000000004</long>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="20">\n          <void index\="0">\n           <int>93</int>\n          </void>\n          <void index\="1">\n           <int>34</int>\n          </void>\n          <void index\="2">\n           <int>12</int>\n          </void>\n          <void index\="3">\n           <int>-11</int>\n          </void>\n          <void index\="4">\n           <int>-7</int>\n          </void>\n          <void index\="5">\n           <int>-21</int>\n          </void>\n          <void index\="6">\n           <int>51</int>\n          </void>\n          <void index\="7">\n           <int>-22</int>\n          </void>\n          <void index\="8">\n           <int>59</int>\n          </void>\n          <void index\="9">\n           <int>74</int>\n          </void>\n          <void index\="10">\n           <int>-19</int>\n          </void>\n          <void index\="11">\n           <int>29</int>\n          </void>\n          <void index\="12">\n           <int>-56</int>\n          </void>\n          <void index\="13">\n           <int>-95</int>\n          </void>\n          <void index\="14">\n           <int>-96</int>\n          </void>\n          <void index\="15">\n           <int>9</int>\n          </void>\n          <void index\="16">\n           <int>44</int>\n          </void>\n          <void index\="17">\n           <int>-37</int>\n          </void>\n          <void index\="18">\n           <int>-54</int>\n          </void>\n          <void index\="19">\n           <int>-21</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="20">\n          <void index\="0">\n           <int>64</int>\n          </void>\n          <void index\="1">\n           <int>12</int>\n          </void>\n          <void index\="2">\n           <int>-43</int>\n          </void>\n          <void index\="3">\n           <int>20</int>\n          </void>\n          <void index\="4">\n           <int>55</int>\n          </void>\n          <void index\="5">\n           <int>74</int>\n          </void>\n          <void index\="6">\n           <int>-20</int>\n          </void>\n          <void index\="7">\n           <int>-54</int>\n          </void>\n          <void index\="8">\n           <int>24</int>\n          </void>\n          <void index\="9">\n           <int>20</int>\n          </void>\n          <void index\="10">\n           <int>-18</int>\n          </void>\n          <void index\="11">\n           <int>77</int>\n          </void>\n          <void index\="12">\n           <int>86</int>\n          </void>\n          <void index\="13">\n           <int>22</int>\n          </void>\n          <void index\="14">\n           <int>47</int>\n          </void>\n          <void index\="15">\n           <int>-24</int>\n          </void>\n          <void index\="16">\n           <int>-33</int>\n          </void>\n          <void index\="17">\n           <int>-57</int>\n          </void>\n          <void index\="18">\n           <int>5</int>\n          </void>\n          <void index\="19">\n           <int>7</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <long>22801</long>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
